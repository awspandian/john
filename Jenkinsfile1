pipeline {
    agent any

    stages {
        stage('SCM') {
            steps {
                git 'https://github.com/awspandian/john.git'
            }
        }
        stage('build') {
            steps {
                sh label: '', script: 'mvn clean'
                sh label: '', script: 'mvn install'
            }
        }
        stage('Build Docker Image') {
            when {
                 branch 'master'
        }
        steps {
            script {
                app =  docker.build("dockerpandian/dd-project")
                app.inside {
                     sh 'echo $(curl localhost:8080)'
        }
        
        }
        }
        }
        
        stage('Pust Docker Image') { 
             when {
                  branch 'master'
        }
         steps {
            script {
              docker.withRegistry('https://registry.hub.docker.com', 'docker_hub'){
                app.push("${env.BUILD_NUMBER}")
                app.push("latest")
              }
        }
        }
        }
        stage('DeployToProduction'){
            when {
            branch 'master'
            }
            steps {
              input 'Deploy to Production?'
              milestone(1)
              withCredentials([usernamePassword(credentialsId: 'web_server', usernameVariable: 'USERNAME', passwordVariable: 'USERPASS')]) {
                 script { 
                       sh "sshpass -p '$USERPASS' -v ssh -o StrictHostKeyChecking=no $USERNAME@$prod_ip \"docker pull dockerpandian/dd-project:${env.BUILD_NUMBER}\""
                        try {
                            sh "sshpass -p '$USERPASS' -v ssh -o StrictHostKeyChecking=no $USERNAME@$prod_ip \"docker stop HIPPO\""
                            sh "sshpass -p '$USERPASS' -v ssh -o StrictHostKeyChecking=no $USERNAME@$prod_ip \"docker rm HIPPO\""
                        } catch (err) {
                            echo: 'caught error: $err'
                        }
                        sh "sshpass -p '$USERPASS' -v ssh -o StrictHostKeyChecking=no $USERNAME@$prod_ip \"docker run --restart always --name HIPPO -p 8080:8080 -d dockerpandian/dd-project:${env.BUILD_NUMBER}\""
                    }
                 }
              }
            }
        }
    }

